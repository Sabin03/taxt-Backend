{
    "sourceFile": "src/app/car-management/brand-list/brand-list.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1722331874238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1722331874238,
            "name": "Commit-0",
            "content": "import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { Brand } from '../../model/brand';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { WebService } from '../../web.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Common } from '../../common';\n\n@Component({\n  selector: 'app-brand-list',\n  templateUrl: './brand-list.component.html',\n  styleUrl: './brand-list.component.css'\n})\n\nexport class BrandListComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  displayedColumns: string[] = ['no', 'name', 'status', 'created_date', 'modify_date', 'action']\n  listArray: Array<Brand> = [];\n  dataSource: MatTableDataSource<Brand> = new MatTableDataSource<Brand>();\n\n\n  constructor(private webService: WebService, public snackBar: MatSnackBar) {\n\n  }\n\n  ngOnInit(): void {\n    this.getList();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openSnackBar(message: string) {\n    this.snackBar.open(message, \"ok\", {\n      duration: 2000,\n    });\n  }\n\n  toggle( bObj: Brand , obj: any ) {\n\n    this.webService.action(Common.svApprovedBrand, {\n     \n      \"brand_id\": bObj.brand_id, \n    }, true).then((responseObj: any) => {\n\n      bObj.status = bObj.status == 1 ? 0 : 1;\n      this.openSnackBar(responseObj.message);\n      this.dataSource = new MatTableDataSource(this.listArray);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n    })\n  }\n\n  getStatusName(obj: Brand) {\n    switch (obj.status) {\n      case 1:\n        return \"Approved\"\n      default:\n        return \"Pending\"\n    }\n  }\n\n\n  \n  getList() {\n\n    this.webService.action(Common.svListCarBrand, {}, true).then((responseObj: any) => {\n\n      Common.Dlog(responseObj);\n      if (responseObj.status == 1) {\n        this.listArray = responseObj.payload;\n\n\n      } else {\n        this.listArray = [];\n        this.openSnackBar(responseObj.message);\n      }\n\n      this.dataSource = new MatTableDataSource(this.listArray);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n    })\n  }\n\n  deleteData(obj: Brand) {\n    this.webService.action(Common.svDeleteBrand, { \"brand_id\": obj.brand_id }, true).then((responseObj: any) => {\n      if (responseObj.status == 1) {\n        this.listArray = this.listArray.filter(item => item.brand_id != obj.brand_id);\n        this.dataSource = new MatTableDataSource(this.listArray);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.openSnackBar(\"brand deleted successfully\");\n      } else {\n        this.openSnackBar(responseObj.message);\n      }\n    })\n  }\n}\n\n"
        }
    ]
}