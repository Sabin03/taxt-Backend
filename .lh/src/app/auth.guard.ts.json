{
    "sourceFile": "src/app/auth.guard.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 39,
            "patches": [
                {
                    "date": 1721120243336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1721568920453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,18 @@\n import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n+import { Common } from './common';\n \n \n export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n   const router: Router = inject(Router);\n+  var authToke = Common.accessToken;\n \n \n-  if (true) {\n+  if (authToke != null && authToke != \"\") {\n     return true;\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n\\ No newline at end of file\n   }\n-  return true;\n-};\n+};\n"
                },
                {
                    "date": 1721569018801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,5 +14,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n\\ No newline at end of file\n+};\n"
                },
                {
                    "date": 1721569102781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,26 @@\n import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n+\n+\n+export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n+  const router: Router = inject(Router);\n+\n+\n+  if (true) {\n+    return true;\n+  }else{\n+    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n+    return false;\n+  }\n+  return true;\n+};\n+\n+\n+/*import { inject } from '@angular/core';\n+import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n+import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n \n export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n@@ -14,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1721569549749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,7 @@\n-import { inject } from '@angular/core';\n-import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n-import { Observable, retry } from 'rxjs';\n \n \n-export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n-  const router: Router = inject(Router);\n-\n-\n-  if (true) {\n-    return true;\n-  }else{\n-    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n-    return false;\n-  }\n-  return true;\n-};\n-\n-\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +16,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n"
                },
                {
                    "date": 1721569683400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,24 @@\n+import { inject } from '@angular/core';\n+import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n+import { Observable, retry } from 'rxjs';\n \n \n-import { inject } from '@angular/core';\n+export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n+  const router: Router = inject(Router);\n+\n+\n+  if (true) {\n+    return true;\n+  }else{\n+    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n+    return false;\n+  }\n+  return true;\n+};\n+\n+\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -16,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722087427148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};\n+};*/\n \n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n"
                },
                {
                    "date": 1722087557332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};\n \n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722089766937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};\n+};*/\n \n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n"
                },
                {
                    "date": 1722090749016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};\n \n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722090927593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};\n+};*/\n \n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n"
                },
                {
                    "date": 1722091253427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};\n \n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722092916511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};\n+};*/\n \n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n"
                },
                {
                    "date": 1722093418386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};/*\n \n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722094478526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};/*\n+};*/\n \n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n"
                },
                {
                    "date": 1722098454773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,7 +31,7 @@\n   if (authToke != null && authToke != \"\") {\n     return true;\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n-    return false;\n+    return true;\n   }\n };\n"
                },
                {
                    "date": 1722098514508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};\n \n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -31,7 +31,7 @@\n   if (authToke != null && authToke != \"\") {\n     return true;\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n-    return true;\n+    return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722102816728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};\n+};*/\n \n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n"
                },
                {
                    "date": 1722102867889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};\n \n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722103414971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};\n+};*/\n \n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n"
                },
                {
                    "date": 1722103429653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n"
                },
                {
                    "date": 1722103794570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};\n \n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722109891042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,9 +13,9 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};\n+};*/\n \n \n /*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n@@ -34,4 +34,51 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n };*/\n+\n+\n+import { inject } from '@angular/core';\n+import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n+import { Observable, catchError, map, of } from 'rxjs';\n+import { Common } from './common';\n+\n+export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n+  const router: Router = inject(Router);\n+  const accessToken = Common.accessToken;\n+\n+  if (accessToken) {\n+    // Check if the access token is valid\n+    return validateToken(accessToken).pipe(\n+      map((isValid) => {\n+        if (isValid) {\n+          return true;\n+        } else {\n+          // Token is invalid, redirect to login page\n+          router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n+          return false;\n+        }\n+      }),\n+      catchError((error) => {\n+        // Handle any errors that occur during token validation\n+        console.error(error);\n+        router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n+        return of (false);\n+      })\n+    );\n+  } else {\n+    // No access token, redirect to login page\n+    router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n+    return false;\n+  }\n+};\n+\n+// Function to validate the access token\n+function validateToken(token: string): Observable<boolean> {\n+  // TO DO: Implement token validation logic here\n+  // For example, you can make a request to your backend to validate the token\n+  return new Observable((observer) => {\n+    // Simulate a successful token validation\n+    observer.next(true);\n+    observer.complete();\n+  });\n+}\n"
                },
                {
                    "date": 1722110362426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+import { inject } from '@angular/core';\n+import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n+import { Observable, retry } from 'rxjs';\n+\n+\n+export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n+  const router: Router = inject(Router);\n+\n+\n+  if (true) {\n+    return true;\n+  }else{\n+    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n+    return false;\n+  }\n+  return true;\n+};\n+\n+\n+/*import { inject } from '@angular/core';\n+import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n+import { Observable, retry } from 'rxjs';\n+import { Common } from './common';\n+\n+\n+export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n+  const router: Router = inject(Router);\n+  var authToke = Common.accessToken;\n+\n+\n+  if (authToke != null && authToke != \"\") {\n+    return true;\n+  }else{\n+    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n+    return false;\n+  }\n+};*/\n"
                },
                {
                    "date": 1722110664460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,50 +1,13 @@\n-import { inject } from '@angular/core';\n-import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n-import { Observable, retry } from 'rxjs';\n-\n-\n-export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n-  const router: Router = inject(Router);\n-\n-\n-  if (true) {\n-    return true;\n-  }else{\n-    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n-    return false;\n-  }\n-  return true;\n-};\n-\n-\n /*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n-import { Common } from './common';\n \n \n export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n   const router: Router = inject(Router);\n-  var authToke = Common.accessToken;\n \n \n-  if (authToke != null && authToke != \"\") {\n-    return true;\n-  }else{\n-    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n-    return false;\n-  }\n-};*/\n-/*import { inject } from '@angular/core';\n-import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n-import { Observable, retry } from 'rxjs';\n-\n-\n-export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n-  const router: Router = inject(Router);\n-\n-\n   if (true) {\n     return true;\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n@@ -53,9 +16,9 @@\n   return true;\n };*/\n \n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -70,52 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n-\n-\n-import { inject } from '@angular/core';\n-import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n-import { Observable, catchError, map, of } from 'rxjs';\n-import { Common } from './common';\n-\n-export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n-  const router: Router = inject(Router);\n-  const accessToken = Common.accessToken;\n-\n-  if (accessToken) {\n-    // Check if the access token is valid\n-    return validateToken(accessToken).pipe(\n-      map((isValid) => {\n-        if (isValid) {\n-          return true;\n-        } else {\n-          // Token is invalid, redirect to login page\n-          router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n-          return false;\n-        }\n-      }),\n-      catchError((error) => {\n-        // Handle any errors that occur during token validation\n-        console.error(error);\n-        router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n-        return of (false);\n-      })\n-    );\n-  } else {\n-    // No access token, redirect to login page\n-    router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n-    return false;\n-  }\n };\n-\n-// Function to validate the access token\n-function validateToken(token: string): Observable<boolean> {\n-  // TO DO: Implement token validation logic here\n-  // For example, you can make a request to your backend to validate the token\n-  return new Observable((observer) => {\n-    // Simulate a successful token validation\n-    observer.next(true);\n-    observer.complete();\n-  });\n-}\n"
                },
                {
                    "date": 1722110777695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};\n \n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722112912763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};\n+};*/\n \n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n"
                },
                {
                    "date": 1722112951483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};\n \n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722124562756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};\n+};*/\n \n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n"
                },
                {
                    "date": 1722127513223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,12 +24,12 @@\n \n \n export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n   const router: Router = inject(Router);\n-  var authToke = Common.accessToken;\n+  var auth_token = Common.accessToken;\n \n \n-  if (authToke != null && authToke != \"\") {\n+  if (auth_token != null && auth_token != \"\") {\n     return true;\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n"
                },
                {
                    "date": 1722127648085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,12 +24,12 @@\n \n \n export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n   const router: Router = inject(Router);\n-  var auth_token = Common.accessToken;\n+  const authToke = Common.accessToken;\n \n \n-  if (auth_token != null && auth_token != \"\") {\n+  if (authToke != null && authToke != \"\") {\n     return true;\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n"
                },
                {
                    "date": 1722127841188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n \n export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n   const router: Router = inject(Router);\n-  const authToke = Common.accessToken;\n+  var authToke = Common.accessToken;\n \n \n   if (authToke != null && authToke != \"\") {\n     return true;\n"
                },
                {
                    "date": 1722346249813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,12 +13,12 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};\n \n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -33,5 +33,5 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n"
                },
                {
                    "date": 1722346643539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,11 +13,29 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n+};*/\n+\n+import { inject } from '@angular/core';\n+import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n+import { Observable, retry } from 'rxjs';\n+import { Common } from './common';\n+\n+export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n+  const router: Router = inject(Router);\n+  var authToke = Common.accessToken;\n+\n+  if (authToke != null && authToke != \"\") {\n+    return true;\n+  }else{\n+    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n+    return false;\n+  }\n };\n \n \n+\n /*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n"
                },
                {
                    "date": 1722416920953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,21 +15,33 @@\n   }\n   return true;\n };*/\n \n-import { inject } from '@angular/core';\n+import { PLATFORM_ID, inject } from '@angular/core';\n+import { isPlatformBrowser } from '@angular/common';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n   const router: Router = inject(Router);\n-  var authToke = Common.accessToken;\n+  const platformId = inject(PLATFORM_ID);\n \n+  let authToke: string | null = null;\n+\n+  if (isPlatformBrowser(platformId)) {\n+    // Client-side, use Common class to access accessToken\n+    authToke = Common.accessToken;\n+  } else {\n+    // Server-side, use a different approach to access the access token\n+    // For example, you can use a server-side storage mechanism or a token stored in a cookie\n+    authToke = null; // or retrieve the token from a server-side storage mechanism\n+  }\n+\n   if (authToke != null && authToke != \"\") {\n     return true;\n-  }else{\n-    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n+  } else {\n+    router?.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n     return false;\n   }\n };\n \n"
                },
                {
                    "date": 1722416956414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+/*import { inject } from '@angular/core';\n+import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n+import { Observable, retry } from 'rxjs';\n+\n+\n+export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n+  const router: Router = inject(Router);\n+\n+\n+  if (true) {\n+    return true;\n+  }else{\n+    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n+    return false;\n+  }\n+  return true;\n+};*/\n+\n+import { PLATFORM_ID, inject } from '@angular/core';\n+import { isPlatformBrowser } from '@angular/common';\n+import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n+import { Observable, retry } from 'rxjs';\n+import { Common } from './common';\n+\n+export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n+  const router: Router = inject(Router);\n+  const platformId = inject(PLATFORM_ID);\n+\n+  let authToke: string | null = null;\n+\n+  if (isPlatformBrowser(platformId)) {\n+    // Client-side, use Common class to access accessToken\n+    authToke = Common.accessToken;\n+  } else {\n+    // Server-side, use a different approach to access the access token\n+    // For example, you can use a server-side storage mechanism or a token stored in a cookie\n+    authToke = null; // or retrieve the token from a server-side storage mechanism\n+  }\n+\n+  if (authToke != null && authToke != \"\") {\n+    return true;\n+  } else {\n+    router?.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n+    return false;\n+  }\n+};\n+\n+\n+\n+/*import { inject } from '@angular/core';\n+import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n+import { Observable, retry } from 'rxjs';\n+import { Common } from './common';\n+\n+\n+export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n+  const router: Router = inject(Router);\n+  var authToke = Common.accessToken;\n+\n+\n+  if (authToke != null && authToke != \"\") {\n+    return true;\n+  }else{\n+    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n+    return false;\n+  }\n+};*/\n"
                },
                {
                    "date": 1722417076602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,75 +15,25 @@\n   }\n   return true;\n };*/\n \n-import { PLATFORM_ID, inject } from '@angular/core';\n-import { isPlatformBrowser } from '@angular/common';\n-import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n-import { Observable, retry } from 'rxjs';\n-import { Common } from './common';\n-\n-export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n-  const router: Router = inject(Router);\n-  const platformId = inject(PLATFORM_ID);\n-\n-  let authToke: string | null = null;\n-\n-  if (isPlatformBrowser(platformId)) {\n-    // Client-side, use Common class to access accessToken\n-    authToke = Common.accessToken;\n-  } else {\n-    // Server-side, use a different approach to access the access token\n-    // For example, you can use a server-side storage mechanism or a token stored in a cookie\n-    authToke = null; // or retrieve the token from a server-side storage mechanism\n-  }\n-\n-  if (authToke != null && authToke != \"\") {\n-    return true;\n-  } else {\n-    router?.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n-    return false;\n-  }\n-};\n-\n-\n-\n /*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n-\n export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n   const router: Router = inject(Router);\n   var authToke = Common.accessToken;\n \n-\n   if (authToke != null && authToke != \"\") {\n     return true;\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n };*/\n-/*import { inject } from '@angular/core';\n-import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n-import { Observable, retry } from 'rxjs';\n \n-\n-export const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n-  const router: Router = inject(Router);\n-\n-\n-  if (true) {\n-    return true;\n-  }else{\n-    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n-    return false;\n-  }\n-  return true;\n-};*/\n-\n import { PLATFORM_ID, inject } from '@angular/core';\n import { isPlatformBrowser } from '@angular/common';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n@@ -113,8 +63,9 @@\n };\n \n \n \n+\n /*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n"
                },
                {
                    "date": 1722418039495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   }\n   return true;\n };*/\n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -30,11 +30,11 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n \n-import { PLATFORM_ID, inject } from '@angular/core';\n+/*import { PLATFORM_ID, inject } from '@angular/core';\n import { isPlatformBrowser } from '@angular/common';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n@@ -59,9 +59,9 @@\n   } else {\n     router?.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n     return false;\n   }\n-};\n+};*/\n \n \n \n \n"
                },
                {
                    "date": 1722423374808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,11 +13,11 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};*/\n+};\n \n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -30,9 +30,9 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};\n+};*/\n \n /*import { PLATFORM_ID, inject } from '@angular/core';\n import { isPlatformBrowser } from '@angular/common';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n"
                },
                {
                    "date": 1722423887190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { inject } from '@angular/core';\n+/*import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n \n \n@@ -13,11 +13,11 @@\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n   return true;\n-};\n+};*/\n \n-/*import { inject } from '@angular/core';\n+import { inject } from '@angular/core';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n import { Observable, retry } from 'rxjs';\n import { Common } from './common';\n \n@@ -30,9 +30,9 @@\n   }else{\n     router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n     return false;\n   }\n-};*/\n+};\n \n /*import { PLATFORM_ID, inject } from '@angular/core';\n import { isPlatformBrowser } from '@angular/common';\n import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n"
                }
            ],
            "date": 1721120243336,
            "name": "Commit-0",
            "content": "import { inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, retry } from 'rxjs';\n\n\nexport const authGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n  const router: Router = inject(Router);\n\n\n  if (true) {\n    return true;\n  }else{\n    router?.navigate(['/login'], {queryParams: {returnUrl: state.url}} );\n    return false;\n  }\n  return true;\n};"
        }
    ]
}