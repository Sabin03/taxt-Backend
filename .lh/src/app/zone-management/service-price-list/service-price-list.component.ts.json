{
    "sourceFile": "src/app/zone-management/service-price-list/service-price-list.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1722255902625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722255974526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n   }\n \n   \n \n-  /*openDialogEdit(obj: ZonePrice) {\n+  openDialogEdit(obj: ZonePrice) {\n     const dialogRef = this.dialog.open(ServicePriceEditComponent, {\n       width: '400px',\n       data: obj\n     })\n@@ -80,9 +80,9 @@\n         this.dataSource.paginator = this.paginator;\n         this.dataSource.sort = this.sort;\n       }\n     })\n-  }*/\n+  }\n \n   deleteData(obj: ZonePrice) {\n     this.webService.action(Common.svDeleteServicePrice, { \"price_id\": obj.price_id, \"zone_id\": obj.zone_id, \"service_id\": obj.service_id  }, true).then((responseObj: any) => {\n       if (responseObj.status == 1) {\n"
                },
                {
                    "date": 1722257072115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,158 @@\n+import { Component, ViewChild } from '@angular/core';\n+import { MatPaginator } from '@angular/material/paginator';\n+import { MatSort } from '@angular/material/sort';\n+import { ZoneList } from '../../model/zone-list';\n+import { Service } from '../../model/service';\n+import { ZonePrice } from '../../model/zone-price';\n+import { MatTableDataSource } from '@angular/material/table';\n+import { WebService } from '../../web.service';\n+import { MatSnackBar } from '@angular/material/snack-bar';\n+import { MatDialog } from '@angular/material/dialog';\n+import { Common } from '../../common';\n+\n+@Component({\n+  selector: 'app-service-price-list',\n+  templateUrl: './service-price-list.component.html',\n+  styleUrl: './service-price-list.component.css'\n+})\n+export class ServicePriceListComponent {\n+\n+\n+  @ViewChild(MatPaginator) paginator!: MatPaginator;\n+  @ViewChild(MatSort) sort!: MatSort;\n+\n+\n+  zone_id = \"\";\n+  service_id = \"\";\n+  selectZoneObj: ZoneList = new ZoneList();\n+  selectServiceObj: Service = new Service();\n+\n+  zoneArr: Array<ZoneList> = [];\n+  serviceArr: Array<Service> = [];\n+\n+\n+  displayedColumns: string[] = ['no', 'zone_name', 'service_name', 'base_charge', 'km_charge', 'min_charge', 'booking_charge', 'minimum_charge', 'minimum_km', 'cancel_charge', 'action']\n+  listArray: Array<ZonePrice> = [];\n+  dataSource: MatTableDataSource<ZonePrice> = new MatTableDataSource<ZonePrice>();\n+\n+\n+  constructor(private webService: WebService, public snackBar: MatSnackBar, public dialog: MatDialog) {\n+\n+  }\n+\n+  ngOnInit(): void {\n+    this.getServiceList();\n+    this.getList();\n+  }\n+\n+  ngAfterViewInit(): void {\n+    this.dataSource.paginator = this.paginator;\n+    this.dataSource.sort = this.sort;\n+  }\n+\n+  \n+  applyFilter(filterValue: string) {\n+    this.dataSource.filter = filterValue.trim().toLowerCase();\n+    if (this.dataSource.paginator) {\n+      this.dataSource.paginator.firstPage();\n+    }\n+  }\n+\n+  openSnackBar(message: string) {\n+    this.snackBar.open(message, \"ok\", {\n+      duration: 2000,\n+    });\n+  }\n+\n+  \n+\n+  openDialogEdit(obj: ZonePrice) {\n+    const dialogRef = this.dialog.open(ServicePriceEditComponent, {\n+      width: '400px',\n+      data: obj\n+    })\n+    dialogRef.afterClosed().subscribe((updateInfo) => {\n+      Common.Dlog(updateInfo);\n+      if (updateInfo) {\n+        const index = this.listArray.findIndex(item => item.price_id == obj.price_id);\n+        this.listArray[index] = updateInfo;\n+        this.dataSource = new MatTableDataSource(this.listArray);\n+        this.dataSource.paginator = this.paginator;\n+        this.dataSource.sort = this.sort;\n+      }\n+    })\n+  }\n+\n+  deleteData(obj: ZonePrice) {\n+    this.webService.action(Common.svDeleteServicePrice, { \"price_id\": obj.price_id, \"zone_id\": obj.zone_id, \"service_id\": obj.service_id  }, true).then((responseObj: any) => {\n+      if (responseObj.status == 1) {\n+        this.listArray = this.listArray.filter(item => item.price_id != obj.price_id);\n+        this.dataSource = new MatTableDataSource(this.listArray);\n+        this.dataSource.paginator = this.paginator;\n+        this.dataSource.sort = this.sort;\n+        this.openSnackBar(\"service price deleted successfully\");\n+      } else {\n+        this.openSnackBar(responseObj.message);\n+      }\n+    })\n+  }\n+\n+\n+  onSelectZone(zObj: ZoneList) {\n+    this.zone_id = zObj.zone_id.toString();\n+    this.service_id = '';\n+    this.selectServiceObj = new Service();\n+    this.getList();\n+\n+  }\n+\n+  onSelectService(sObj: Service) {\n+    this.service_id = sObj.service_id.toString();\n+    this.getList();\n+  }\n+\n+\n+  getServiceList(){\n+\n+    \n+    this.webService.action(Common.svZoneServiceList, {}, true).then((responseObj: any) => {\n+\n+      Common.Dlog(responseObj);\n+      if (responseObj.status == 1) {\n+          this.zoneArr =  responseObj.payload.zone_list;\n+          this.serviceArr = responseObj.payload.service_list;\n+      }\n+\n+    })\n+  }\n+\n+  getList() {\n+\n+    var paraObj: any = {};\n+\n+    if (this.zone_id != \"\") {\n+      paraObj[\"zone_id\"] = this.zone_id;\n+    }\n+\n+    if (this.service_id != '') {\n+      paraObj[\"service_id\"] = this.service_id;\n+    }\n+\n+\n+    this.webService.action(Common.svZoneServicePrice, paraObj, true).then((responseObj: any) => {\n+\n+      Common.Dlog(responseObj);\n+      if (responseObj.status == 1) {\n+        this.listArray = responseObj.payload;\n+      } else {\n+        this.listArray = [];\n+        this.openSnackBar(responseObj.message);\n+      }\n+\n+      this.dataSource = new MatTableDataSource(this.listArray);\n+      this.dataSource.paginator = this.paginator;\n+      this.dataSource.sort = this.sort;\n+\n+    })\n+  }\n+}\n"
                },
                {
                    "date": 1722258009921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import { WebService } from '../../web.service';\n import { MatSnackBar } from '@angular/material/snack-bar';\n import { MatDialog } from '@angular/material/dialog';\n import { Common } from '../../common';\n+import { ServicePriceEditComponent } from '../service-price-edit/service-price-edit.component';\n \n @Component({\n   selector: 'app-service-price-list',\n   templateUrl: './service-price-list.component.html',\n@@ -155,162 +156,4 @@\n \n     })\n   }\n }\n-import { Component, ViewChild } from '@angular/core';\n-import { MatPaginator } from '@angular/material/paginator';\n-import { MatSort } from '@angular/material/sort';\n-import { ZoneList } from '../../model/zone-list';\n-import { Service } from '../../model/service';\n-import { ZonePrice } from '../../model/zone-price';\n-import { MatTableDataSource } from '@angular/material/table';\n-import { WebService } from '../../web.service';\n-import { MatSnackBar } from '@angular/material/snack-bar';\n-import { MatDialog } from '@angular/material/dialog';\n-import { Common } from '../../common';\n-\n-@Component({\n-  selector: 'app-service-price-list',\n-  templateUrl: './service-price-list.component.html',\n-  styleUrl: './service-price-list.component.css'\n-})\n-export class ServicePriceListComponent {\n-\n-\n-  @ViewChild(MatPaginator) paginator!: MatPaginator;\n-  @ViewChild(MatSort) sort!: MatSort;\n-\n-\n-  zone_id = \"\";\n-  service_id = \"\";\n-  selectZoneObj: ZoneList = new ZoneList();\n-  selectServiceObj: Service = new Service();\n-\n-  zoneArr: Array<ZoneList> = [];\n-  serviceArr: Array<Service> = [];\n-\n-\n-  displayedColumns: string[] = ['no', 'zone_name', 'service_name', 'base_charge', 'km_charge', 'min_charge', 'booking_charge', 'minimum_charge', 'minimum_km', 'cancel_charge', 'action']\n-  listArray: Array<ZonePrice> = [];\n-  dataSource: MatTableDataSource<ZonePrice> = new MatTableDataSource<ZonePrice>();\n-\n-\n-  constructor(private webService: WebService, public snackBar: MatSnackBar, public dialog: MatDialog) {\n-\n-  }\n-\n-  ngOnInit(): void {\n-    this.getServiceList();\n-    this.getList();\n-  }\n-\n-  ngAfterViewInit(): void {\n-    this.dataSource.paginator = this.paginator;\n-    this.dataSource.sort = this.sort;\n-  }\n-\n-  \n-  applyFilter(filterValue: string) {\n-    this.dataSource.filter = filterValue.trim().toLowerCase();\n-    if (this.dataSource.paginator) {\n-      this.dataSource.paginator.firstPage();\n-    }\n-  }\n-\n-  openSnackBar(message: string) {\n-    this.snackBar.open(message, \"ok\", {\n-      duration: 2000,\n-    });\n-  }\n-\n-  \n-\n-  openDialogEdit(obj: ZonePrice) {\n-    const dialogRef = this.dialog.open(ServicePriceEditComponent, {\n-      width: '400px',\n-      data: obj\n-    })\n-    dialogRef.afterClosed().subscribe((updateInfo) => {\n-      Common.Dlog(updateInfo);\n-      if (updateInfo) {\n-        const index = this.listArray.findIndex(item => item.price_id == obj.price_id);\n-        this.listArray[index] = updateInfo;\n-        this.dataSource = new MatTableDataSource(this.listArray);\n-        this.dataSource.paginator = this.paginator;\n-        this.dataSource.sort = this.sort;\n-      }\n-    })\n-  }\n-\n-  deleteData(obj: ZonePrice) {\n-    this.webService.action(Common.svDeleteServicePrice, { \"price_id\": obj.price_id, \"zone_id\": obj.zone_id, \"service_id\": obj.service_id  }, true).then((responseObj: any) => {\n-      if (responseObj.status == 1) {\n-        this.listArray = this.listArray.filter(item => item.price_id != obj.price_id);\n-        this.dataSource = new MatTableDataSource(this.listArray);\n-        this.dataSource.paginator = this.paginator;\n-        this.dataSource.sort = this.sort;\n-        this.openSnackBar(\"service price deleted successfully\");\n-      } else {\n-        this.openSnackBar(responseObj.message);\n-      }\n-    })\n-  }\n-\n-\n-  onSelectZone(zObj: ZoneList) {\n-    this.zone_id = zObj.zone_id.toString();\n-    this.service_id = '';\n-    this.selectServiceObj = new Service();\n-    this.getList();\n-\n-  }\n-\n-  onSelectService(sObj: Service) {\n-    this.service_id = sObj.service_id.toString();\n-    this.getList();\n-  }\n-\n-\n-  getServiceList(){\n-\n-    \n-    this.webService.action(Common.svZoneServiceList, {}, true).then((responseObj: any) => {\n-\n-      Common.Dlog(responseObj);\n-      if (responseObj.status == 1) {\n-          this.zoneArr =  responseObj.payload.zone_list;\n-          this.serviceArr = responseObj.payload.service_list;\n-      }\n-\n-    })\n-  }\n-\n-  getList() {\n-\n-    var paraObj: any = {};\n-\n-    if (this.zone_id != \"\") {\n-      paraObj[\"zone_id\"] = this.zone_id;\n-    }\n-\n-    if (this.service_id != '') {\n-      paraObj[\"service_id\"] = this.service_id;\n-    }\n-\n-\n-    this.webService.action(Common.svZoneServicePrice, paraObj, true).then((responseObj: any) => {\n-\n-      Common.Dlog(responseObj);\n-      if (responseObj.status == 1) {\n-        this.listArray = responseObj.payload;\n-      } else {\n-        this.listArray = [];\n-        this.openSnackBar(responseObj.message);\n-      }\n-\n-      this.dataSource = new MatTableDataSource(this.listArray);\n-      this.dataSource.paginator = this.paginator;\n-      this.dataSource.sort = this.sort;\n-\n-    })\n-  }\n-}\n"
                }
            ],
            "date": 1722255902625,
            "name": "Commit-0",
            "content": "import { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ZoneList } from '../../model/zone-list';\nimport { Service } from '../../model/service';\nimport { ZonePrice } from '../../model/zone-price';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { WebService } from '../../web.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Common } from '../../common';\n\n@Component({\n  selector: 'app-service-price-list',\n  templateUrl: './service-price-list.component.html',\n  styleUrl: './service-price-list.component.css'\n})\nexport class ServicePriceListComponent {\n\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n\n  zone_id = \"\";\n  service_id = \"\";\n  selectZoneObj: ZoneList = new ZoneList();\n  selectServiceObj: Service = new Service();\n\n  zoneArr: Array<ZoneList> = [];\n  serviceArr: Array<Service> = [];\n\n\n  displayedColumns: string[] = ['no', 'zone_name', 'service_name', 'base_charge', 'km_charge', 'min_charge', 'booking_charge', 'minimum_charge', 'minimum_km', 'cancel_charge', 'action']\n  listArray: Array<ZonePrice> = [];\n  dataSource: MatTableDataSource<ZonePrice> = new MatTableDataSource<ZonePrice>();\n\n\n  constructor(private webService: WebService, public snackBar: MatSnackBar, public dialog: MatDialog) {\n\n  }\n\n  ngOnInit(): void {\n    this.getServiceList();\n    this.getList();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  \n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openSnackBar(message: string) {\n    this.snackBar.open(message, \"ok\", {\n      duration: 2000,\n    });\n  }\n\n  \n\n  /*openDialogEdit(obj: ZonePrice) {\n    const dialogRef = this.dialog.open(ServicePriceEditComponent, {\n      width: '400px',\n      data: obj\n    })\n    dialogRef.afterClosed().subscribe((updateInfo) => {\n      Common.Dlog(updateInfo);\n      if (updateInfo) {\n        const index = this.listArray.findIndex(item => item.price_id == obj.price_id);\n        this.listArray[index] = updateInfo;\n        this.dataSource = new MatTableDataSource(this.listArray);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }\n    })\n  }*/\n\n  deleteData(obj: ZonePrice) {\n    this.webService.action(Common.svDeleteServicePrice, { \"price_id\": obj.price_id, \"zone_id\": obj.zone_id, \"service_id\": obj.service_id  }, true).then((responseObj: any) => {\n      if (responseObj.status == 1) {\n        this.listArray = this.listArray.filter(item => item.price_id != obj.price_id);\n        this.dataSource = new MatTableDataSource(this.listArray);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.openSnackBar(\"service price deleted successfully\");\n      } else {\n        this.openSnackBar(responseObj.message);\n      }\n    })\n  }\n\n\n  onSelectZone(zObj: ZoneList) {\n    this.zone_id = zObj.zone_id.toString();\n    this.service_id = '';\n    this.selectServiceObj = new Service();\n    this.getList();\n\n  }\n\n  onSelectService(sObj: Service) {\n    this.service_id = sObj.service_id.toString();\n    this.getList();\n  }\n\n\n  getServiceList(){\n\n    \n    this.webService.action(Common.svZoneServiceList, {}, true).then((responseObj: any) => {\n\n      Common.Dlog(responseObj);\n      if (responseObj.status == 1) {\n          this.zoneArr =  responseObj.payload.zone_list;\n          this.serviceArr = responseObj.payload.service_list;\n      }\n\n    })\n  }\n\n  getList() {\n\n    var paraObj: any = {};\n\n    if (this.zone_id != \"\") {\n      paraObj[\"zone_id\"] = this.zone_id;\n    }\n\n    if (this.service_id != '') {\n      paraObj[\"service_id\"] = this.service_id;\n    }\n\n\n    this.webService.action(Common.svZoneServicePrice, paraObj, true).then((responseObj: any) => {\n\n      Common.Dlog(responseObj);\n      if (responseObj.status == 1) {\n        this.listArray = responseObj.payload;\n      } else {\n        this.listArray = [];\n        this.openSnackBar(responseObj.message);\n      }\n\n      this.dataSource = new MatTableDataSource(this.listArray);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n    })\n  }\n}\n"
        }
    ]
}